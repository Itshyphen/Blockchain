[{"/home/ranju/location/meDossier/frontend/src/index.js":"1","/home/ranju/location/meDossier/frontend/src/reportWebVitals.js":"2","/home/ranju/location/meDossier/frontend/src/App.js":"3","/home/ranju/location/meDossier/frontend/src/pages/home.js":"4","/home/ranju/location/meDossier/frontend/src/pages/patients_dashboard.js":"5","/home/ranju/location/meDossier/frontend/src/pages/doctor_dashboard.js":"6","/home/ranju/location/meDossier/frontend/src/pages/render.js":"7","/home/ranju/location/meDossier/frontend/src/config.js":"8","/home/ranju/location/meDossier/frontend/src/getWeb3.js":"9","/home/ranju/location/meDossier/frontend/src/pages/history.js":"10","/home/ranju/location/meDossier/frontend/src/pages/registrer_dashboard.js":"11","/home/ranju/location/meDossier/frontend/src/ipfs.js":"12"},{"size":547,"mtime":1625113148871,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1623469546502,"results":"15","hashOfConfig":"14"},{"size":153,"mtime":1625113148827,"results":"16","hashOfConfig":"14"},{"size":5550,"mtime":1625287903102,"results":"17","hashOfConfig":"14"},{"size":13082,"mtime":1625287909896,"results":"18","hashOfConfig":"14"},{"size":19133,"mtime":1625287896253,"results":"19","hashOfConfig":"14"},{"size":6321,"mtime":1625286914987,"results":"20","hashOfConfig":"14"},{"size":12611,"mtime":1625113148843,"results":"21","hashOfConfig":"14"},{"size":1164,"mtime":1625113148843,"results":"22","hashOfConfig":"14"},{"size":86,"mtime":1625113148983,"results":"23","hashOfConfig":"14"},{"size":10779,"mtime":1625287913489,"results":"24","hashOfConfig":"14"},{"size":153,"mtime":1625113148879,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mv816g",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ranju/location/meDossier/frontend/src/index.js",[],"/home/ranju/location/meDossier/frontend/src/reportWebVitals.js",[],"/home/ranju/location/meDossier/frontend/src/App.js",[],"/home/ranju/location/meDossier/frontend/src/pages/home.js",["55","56"],"import { TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport logo from \"./logo.png\";\n// import PhoneInput from \"react-phone-number-input/input\"\n\nfunction Register(props) {\n  const pnameRef = React.useRef();\n  const phoneRef = React.useRef();\n  const genderRef = React.useRef();\n  const dobRef = React.useRef();\n  const bloodRef = React.useRef();\n  const dnameRef = React.useRef();\n  const facultyRef = React.useRef();\n  const licenceRef = React.useRef();\n  const dphoneRef = React.useRef();\n  const hnameRef = React.useRef();\n\n  return (\n    <div className=\"Main\">\n      <div className=\"Register\">\n        {/* <Navbar/> */}\n\n        <div className=\"meDossier\">\n          <img\n            src={logo}\n            width=\"150\"\n            height=\"60\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Bootstrap logo\"\n          ></img>\n        </div>\n        <div className=\"heading\">\n          <h1> Welcome to MeDossier</h1>\n          <h5>The only place to store and access your record securely</h5>\n        </div>\n        <div className=\"b-container\">\n          <div className=\"Patient small card\">\n            <h5>\n              {\" \"}\n              <b>Register as Patient</b>\n            </h5>\n            <form>\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                ref={pnameRef}\n                required\n              ></input>\n              <br />\n              <label>PhoneNo: </label>\n              <input\n                type=\"text\"\n                placeholder=\"9746025484\"\n                ref={phoneRef}\n                required\n              />\n\n              <br />\n              <label>DateofBirth:</label>\n              <input type=\"Date\" ref={dobRef} required />\n              <br />\n              <label>Blood Group: </label>\n              <input type=\"text\" placeholder=\"O+ve\" ref={bloodRef} required />\n              <br />\n              <label id=\"gender\"> Gender:</label>\n              <select ref={genderRef} required>\n                <option value=\"Select \">Select</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Others\"> Others</option>\n              </select>\n              <br />\n\n              <Button\n                onClick={(event) => {\n                  event.preventDefault();\n                  const name = pnameRef.current.value;\n                  const phone = phoneRef.current.value;\n                  const gender = genderRef.current.value;\n                  const dob = dobRef.current.value;\n                  const blood = bloodRef.current.value;\n                  props.patientRegister(name, phone, gender, dob, blood);\n                }}\n              >\n                {\" \"}\n                <i class=\"fas fa-upload\"></i>\n                Submit{\" \"}\n              </Button>\n            </form>\n          </div>\n          <br />\n          {/* Doctor login/signup\n           */}\n          <div className=\"Doctor small card\">\n            <h5>\n              {\" \"}\n              <b>Register as Doctor</b>\n            </h5>\n            <form>\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                required\n                ref={dnameRef}\n              ></input>\n              <br />\n              <label>License Number:</label>\n              <input\n                type=\"text\"\n                placeholder=\"License number\"\n                ref={licenceRef}\n                required\n              />\n              <br />\n              <label>Hospital Name:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Name of the hospital\"\n                ref={hnameRef}\n                required\n              />\n              <br />\n              <label> ContactNo:</label>\n              <input\n                type=\"text\"\n                placeholder=\"9746025484\"\n                ref={dphoneRef}\n                required\n              />\n\n              <br />\n              <label>Faculty: </label>\n              <input\n                type=\"text\"\n                name=\"faculty\"\n                placeholder=\"Enter your faculty\"\n                ref={facultyRef}\n                required\n              />\n              <br />\n              <Button\n                onClick={(event) => {\n                  event.preventDefault();\n                  const name = dnameRef.current.value;\n                  const contact = dphoneRef.current.value;\n                  const faculty = facultyRef.current.value;\n                  const hname = hnameRef.current.value;\n                  const license = licenceRef.current.value;\n                  props.doctorRegister(name, hname, faculty, contact, license);\n                }}\n              >\n                {\" \"}\n                <i class=\"fas fa-upload\"></i> Submit\n              </Button>\n            </form>\n          </div>\n        </div>\n        <div className=\"login small card\">\n          <h5>Already have an account?</h5>\n          <Button\n            onClick={() => {\n              props.handlelogin();\n            }}\n          >\n            {\" \"}\n            <i class=\"fas fa-sign-in-alt\"></i> Login\n          </Button>\n        </div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\nexport default Register;\n","/home/ranju/location/meDossier/frontend/src/pages/patients_dashboard.js",["57","58","59","60","61","62","63","64","65","66","67"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Tabs, Tab, Row, Nav, Navbar, Card, Button } from \"react-bootstrap\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ipfs from \"../ipfs\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.png\";\nimport \"./general.css\";\nimport \"./patient.css\";\nimport history from \"./history\";\nimport Web3 from \"web3\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\n\nfunction Patient(props) {\n  const dnameRef = useRef();\n  const reasonRef = useRef();\n  const dateRef = useRef();\n  const addressRef = useRef();\n  const [ipfshash, setIpfshash] = useState();\n  const [buffer, setBuffer] = useState();\n  const [records, setRecords] = useState([]);\n\n  console.log(props.records);\n  console.log(props.patient);\n  // const[records,setRecords] =useState([]);\n  const doctorRef = useRef();\n  const grantRef = useRef();\n\n  const name = localStorage.getItem(\"name\");\n  const dob = localStorage.getItem(\"dob\");\n  const gender = localStorage.getItem(\"gender\");\n  const bloodgroup = localStorage.getItem(\"bloodgroup\");\n  const phone = localStorage.getItem(\"phone\");\n  const currentAccount = localStorage.getItem(\"currentAccount\");\n  const isDoctor = localStorage.getItem(\"isdoctor\");\n  const isAdmin = localStorage.getItem(\"isUser\");\n  const ispatient = localStorage.getItem(\"ispatient\");\n\n  const web3 = new Web3(Web3.givenProvider);\n  const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n  const classes = useStyles();\n  const StyledTablecell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.common.blue,\n    },\n    body: {\n      fontSIze: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n        color: theme.palette.common.pink,\n      },\n    },\n  }))(TableRow);\n\n  useEffect(() => {\n    getPatientRecord();\n  }, []);\n\n  const uploadrecord = async (dname, reason, date) => {\n    try {\n      console.log(\"hh\");\n      console.log(dname, reason, date);\n      console.log(currentAccount);\n      console.log(contract);\n      const res = await contract.methods\n        .addRecord(dname, reason, date, ipfshash, currentAccount)\n        .send({ from: currentAccount });\n      console.log(res);\n      getPatientRecord();\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  //Get Patient details by patient\n  const getPatientRecord = async () => {\n    try {\n      const recordlength = await contract.methods\n        .getrecordlist(currentAccount)\n        .call({ from: currentAccount });\n      const recordlist = [];\n      for (let i = 0; i < recordlength; i++) {\n        const record = await contract.methods\n          .getPatientRecords(currentAccount, i)\n          .call({ from: currentAccount });\n        console.log(record);\n\n        recordlist.push(record);\n      }\n      setRecords(recordlist);\n      // localStorage.setItem('dname',records.dname);\n      // localStorage.setItem('reason',records.reason)\n      // localStorage.setItem('visitDate',records.visitDate)\n      // localStorage.setItem('ipfs',records.ipfs)\n\n      // console.log(records)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const Details = () => {\n    return (\n      <div className=\"Details\">\n        <h5>\n          Medical Records are important for you and we care about them and store\n          them securely! Get your records anywhere with just a touch!\n        </h5>\n        <div className=\"card\">\n          <h3>Your Details</h3>\n          <hr></hr>\n          <div>\n            <b>\n              Account Address:<span>{currentAccount}</span>\n            </b>\n          </div>\n          <div className=\"details\">\n            <b>Name : </b>\n            <span>{name}</span>\n            <br></br>\n            <b>Phone </b>:<span>{phone}</span>\n            <br></br>\n            <b>Gender </b>:<span>{gender}</span>\n            {/* </b> */}\n            <br />\n            <b>Date of Birth </b>:<span>{dob}</span>\n            {/* </b> */}\n            <br></br>\n            <b>Blood Group </b>:<span>{bloodgroup}</span>\n            {/* </b> */}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const handlechange = async (event) => {\n    event.preventDefault();\n    //capture the userfile\n    const file = event.target.files[0];\n    //Read the file\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    //file is converted to a buffer to prepare for uploading to IPFS\n    reader.onloadend = () => {\n      let buffer = Buffer(reader.result);\n      setBuffer(buffer);\n      console.log(\"buffer\", buffer);\n    };\n  };\n  const onsubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"hh\");\n    const ipfsHash = await ipfs.add(buffer);\n    console.log(ipfsHash);\n    console.log(ipfsHash[0].hash);\n    setIpfshash(ipfsHash[0].hash);\n  };\n\n  const Upload = () => {\n    return (\n      <div className=\"ReportUpload\">\n        <h5>\n          {\" \"}\n          !!!Upload your records to the meDossier for the highest level of\n          security!!!\n        </h5>\n        <Card className=\"small card\">\n          <div className=\"upload\">\n            <label> Upload your report to IPFS</label>\n            <form onSubmit={onsubmit}>\n              <input type=\"file\" onChange={handlechange} />\n              <br />\n              <Button onClick={onsubmit}>Submit</Button>\n            </form>\n          </div>\n\n          {/* Upload file to blockchain */}\n          <form>\n            <label> Upload your record to blockchain </label>\n            <br />\n            Name:\n            <input\n              type=\"text\"\n              placeholder=\"Name of the doctor\"\n              ref={dnameRef}\n            />\n            <br />\n            Reason:{\" \"}\n            <input\n              type=\"text\"\n              placeholder=\"Reason to visit hospital\"\n              ref={reasonRef}\n            />\n            <br />\n            VisitedDate: <input type=\"date\" ref={dateRef} />\n            <br />\n            <br />\n            {/* <input type =\"submit\"/> */}\n            <Button\n              onClick={(event) => {\n                event.preventDefault();\n\n                const dname = dnameRef.current.value;\n                const reason = reasonRef.current.value;\n                const date = dateRef.current.value;\n                //  const address = reasonRef.current.value\n\n                uploadrecord(dname, reason, date);\n              }}\n            >\n              Submit\n            </Button>\n          </form>\n        </Card>\n      </div>\n    );\n  };\n\n  const Report = () => {\n    if (records.length === 0) {\n      return (\n        <div>\n          <h2>Your Report</h2>\n          <p> Your record will appear here.</p>\n          <p> loading........</p>\n        </div>\n      );\n    }\n    if (!currentAccount) {\n      history.push(\"/\");\n    }\n    if (isDoctor == \"true\") {\n      history.push(\"/patient\");\n    }\n    if (isAdmin == \"true\") {\n      history.push(\"/Registration_office\");\n    }\n\n    return (\n      <div className=\"Report\">\n        <h2>Your Report</h2>\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              stickyHeader\n              aria-label=\"sticky table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTablecell> #</StyledTablecell>\n                  <StyledTablecell>Doctor name</StyledTablecell>\n                  <StyledTablecell>Reason to visit doctor </StyledTablecell>\n                  <StyledTablecell>VisitedDate</StyledTablecell>\n                  <StyledTablecell>Records</StyledTablecell>\n                </TableRow>\n              </TableHead>\n\n              {records.map((record, key) => (\n                <TableBody>\n                  <StyledTableRow key={key}>\n                    <TableCell>{key}</TableCell>\n                    <TableCell>{record.dname}</TableCell>\n                    <TableCell>{record.reason}</TableCell>\n                    <TableCell>{record.visitedDate}</TableCell>\n                    <TableCell>\n                      <a\n                        href={`https://ipfs.io/ipfs/${record.ipfs}`}\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        click here to view your record\n                      </a>\n                    </TableCell>\n                  </StyledTableRow>\n                </TableBody>\n              ))}\n            </Table>\n          </TableContainer>\n        </Paper>\n      </div>\n    );\n  };\n\n  const Access = () => {\n    return (\n      <div className=\"small card\">\n        <h3>Grant/Revoke Access</h3>\n        <hr />\n\n        <form>\n          <label>Provide Access: </label>\n          <input\n            type=\"text\"\n            placeholder=\" Address to grant access\"\n            ref={grantRef}\n          />\n          <Button\n            onClick={(event) => {\n              event.preventDefault();\n              const doctor = grantRef.current.value;\n              console.log(doctor);\n              props.grantAccess(doctor);\n            }}\n          >\n            {\" \"}\n            Submit\n          </Button>\n        </form>\n\n        <br />\n        <form>\n          <label> Revoke Access: </label>\n          <input\n            type=\"text\"\n            placeholder=\" Address to revoke access from\"\n            ref={doctorRef}\n          />\n          <Button\n            onClick={(event) => {\n              event.preventDefault();\n              const doctor = doctorRef.current.value;\n              console.log(doctor);\n              props.revokeAccess(doctor);\n            }}\n          >\n            {\" \"}\n            Submit\n          </Button>\n        </form>\n      </div>\n    );\n  };\n  if (!currentAccount) {\n    history.push(\"/\");\n  }\n  if (isDoctor == \"true\") {\n    history.push(\"/doctor_dashboard\");\n  }\n  if (isAdmin == \"true\") {\n    history.push(\"/Registration_office\");\n  }\n  return (\n    <div className=\"patient_main\">\n      <div className=\"nav_main\">\n        <Navbar expand=\"lg\">\n          <img\n            src={logo}\n            width=\"120\"\n            height=\"40\"\n            className=\"d-inline-block align-top\"\n          />\n          {/* patient */}\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav.Link a href=\"/patient\">\n              {\" \"}\n              <i class=\"fas fa-1x fa-user-circle\"></i> {name}{\" \"}\n            </Nav.Link>\n            <Button onClick={(e) => props.logout()}>\n              {\" \"}\n              <i class=\"fas fa-1x fa-sign-out-alt\"></i> Log out\n            </Button>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n\n      <div className=\"tab-wrapper\">\n        <Tab.Container defaultActiveKey=\"details\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"details\">\n                    <b>Details</b>\n                  </Nav.Link>\n                  <hr />\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"profile\">\n                    <b>AccessRecord</b>\n                  </Nav.Link>{\" \"}\n                  <hr />\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"uploadRecord\">\n                    {\" \"}\n                    <b>UploadRecord</b>\n                  </Nav.Link>\n                  <hr />\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"access\">\n                    <b>Grant/Revoke Acccess</b>\n                  </Nav.Link>\n                  <hr />\n                </Nav.Item>\n              </Nav>\n            </div>\n\n            <div className=\"col-sm-9\">\n              <h1> Welcome to MeDossier</h1>\n\n              <Tab.Content>\n                <Tab.Pane eventKey=\"details\" title=\"Details\">\n                  <Details />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"profile\" title=\"AcessRecord\">\n                  <Report />\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"uploadRecord\" title=\"UploadRecord\">\n                  <Upload />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"access\" title=\"Grant/Revoke Acccess\">\n                  <Access />\n                </Tab.Pane>\n                {/* </Tabs> */}\n              </Tab.Content>\n            </div>\n          </div>\n        </Tab.Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Patient;\n","/home/ranju/location/meDossier/frontend/src/pages/doctor_dashboard.js",["68","69","70","71"],"import React, { useState } from \"react\";\nimport Web3 from \"web3\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableHead,\n  TableContainer,\n  TableBody,\n  TableCell,\n  TableRow,\n  Card,\n  Box,\n  Paper,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Tab, Row, Col, Nav } from \"react-bootstrap\";\nimport \"./general.css\";\nimport logo from \"./logo.png\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport ipfs from \"../ipfs.js\";\nimport history from \"./history\";\n\n//main dashboard\nfunction DocDashboard(props) {\n  // const [currentAccount, setCurrentAccount] = useState(props.currentAccount);\n  // const[contract, setContract] = useState(props.contract);\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [gender, setGender] = useState(\"Female\");\n  const [dob, setDob] = useState(\"\");\n  const [blood, setBlood] = useState(\"\");\n  const [accountAddr, setAccountAddr] = useState(\"\");\n  const [authorized, isAuthorized] = useState(\"false\");\n  const [recordlen, setRecordLength] = useState(0);\n  const [records, setRecords] = useState([]);\n  const [dname, setDname] = useState(\"\");\n  const [visitedDate, setVisDate] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const [buffer, setBuffer] = useState(null);\n\n  //get the data from local storage\n  const docname = localStorage.getItem(\"docname\");\n  const faculty = localStorage.getItem(\"faculty\");\n  const license = localStorage.getItem(\"license\");\n  const hname = localStorage.getItem(\"hname\");\n  const isApproved = localStorage.getItem(\"isApproved\");\n  const contact = localStorage.getItem(\"contact\");\n  const currentAccount = localStorage.getItem(\"currentAccount\");\n\n  const web3 = new Web3(Web3.givenProvider);\n  const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\n  const ispatient = localStorage.getItem(\"ispatient\");\n  const isAdmin = localStorage.getItem(\"isUser\");\n\n  //Get details of patient: can be accessed by anyone\n  const getPatientDetails = async (e) => {\n    try {\n      const result = await contract.methods\n        .getPatientDetails(accountAddr)\n        .call();\n      console.log(result);\n      setName(result[\"_name\"]);\n      setPhone(result[\"_phone\"]);\n      setBlood(result[\"_bloodgroup\"]);\n      setGender(result[\"_gender\"]);\n      setDob(result[\"_dob\"]);\n    } catch (error) {\n      console.log(error);\n    }\n    getPatientRecord();\n  };\n  //bullet tube vague brain excuse valley total whale scrap sense water unfold\n\n  //Get access to the patient record: only to authorized doctor\n  const getPatientRecord = async (e) => {\n    try {\n      //check whether doctor is authorized or not\n      const access = await contract.methods\n        .isAuthorized(accountAddr, currentAccount)\n        .call();\n      console.log(access);\n      isAuthorized(access);\n\n      //get the number of records\n      const rlen = await contract.methods.getrecordlist(accountAddr).call();\n      console.log(rlen);\n      setRecordLength(rlen);\n\n      if (authorized) {\n        let record = [];\n        for (var i = 0; i < recordlen; i++) {\n          const result = await contract.methods\n            .getPatientRecords(accountAddr, i)\n            .call({ from: currentAccount });\n          console.log(result);\n          record.push({\n            dname: result.dname,\n            reason: result.reason,\n            visDate: result.visitedDate,\n            ipfs: result.ipfs,\n          });\n        }\n        console.log(record);\n        setRecords(record);\n      } else {\n        alert(\"Sorry! You are not authorized to get the whole record.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //Only authorized doctor can add the patients record\n  const addPatientRecord = async (e) => {\n    try {\n      //whether doctor is authorized or not\n      const access = await contract.methods\n        .isAuthorized(accountAddr, currentAccount)\n        .call();\n      console.log(access);\n      isAuthorized(access);\n\n      if (authorized) {\n        //add the file buffer to ipfs\n        let ipfshash = await ipfs.files.add(buffer);\n        //url ro the ipfs stored file\n        let url = \"https://ipfs.io/ipfs/\" + ipfshash[0].hash;\n        console.log(ipfshash[0].hash);\n        console.log(url.toString());\n        // ipfshash[0].hash.toString()\n        const hash = ipfshash[0].hash;\n        // const hashs = String(hash)\n\n        await contract.methods\n          .addRecord(docname, reason, visitedDate, String(hash), accountAddr)\n          .send({ from: currentAccount, gas: 1000000 });\n      } else {\n        alert(\"Sorry! You are not authorized to get the whole record.\");\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Error Uploading Report\");\n    }\n  };\n\n  //Get the uploaded file and set its buffer\n  const captureFile = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onload = async () => {\n      const buffer = await Buffer.from(reader.result);\n      setBuffer(buffer);\n    };\n  };\n\n  //Styling for table cell\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.common.blue,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  if (!currentAccount) {\n    history.push(\"/\");\n  }\n  if (ispatient == \"true\") {\n    history.push(\"/patient\");\n  }\n  if (isAdmin == \"true\") {\n    history.push(\"/Registration_office\");\n  }\n\n  return (\n    <div className=\"DocDashboard\">\n      {/* Navbar */}\n      <div className=\"navbar\">\n        <a href=\"/doctor_dashboard\">\n          <Button o>\n            <img\n              src={logo}\n              width=\"120\"\n              height=\"40\"\n              className=\"d-inline-block align-top\"\n              alt=\"React Bootstrap logo\"\n            />\n          </Button>\n        </a>\n\n        {/* <Button a href=\"/doctor_dashboard\" > <i class=\"fas fa-1x fa-user-circle\"></i> {docname}  </Button> */}\n\n        <Button onClick={(e) => props.logout()}>\n          {\" \"}\n          <i class=\"fas fa-1x fa-sign-out-alt\" /> Log out\n        </Button>\n      </div>\n      {/* End Navbar */}\n\n      {/* Side Tabs */}\n      <div className=\"tab-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <Tab.Container defaultActiveKey=\"your_details\">\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <div>\n                        <Nav.Item>\n                          <Nav.Link eventKey=\"your_details\">\n                            My Details\n                          </Nav.Link>\n                        </Nav.Item>\n                      </div>\n\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"access_record\">\n                          Access Records\n                        </Nav.Link>\n                      </Nav.Item>\n\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"add_record\">Add Records</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <Tab.Content>\n                      {/* Doctors Details */}\n                      <Tab.Pane eventKey=\"your_details\">\n                        <div className=\"Details\">\n                          <h4>....Welcome to the meDossier....</h4>\n                          <h4>\n                            ..This is the place where you can access your\n                            patients records anywhere everywhere..\n                          </h4>\n                        </div>\n                        <div className=\"card\">\n                          <h3>Your Details</h3>\n                          <hr></hr>\n                          <div>\n                            <b>\n                              Account Address:<span>{currentAccount}</span>\n                            </b>\n                          </div>\n                          <div className=\"details\">\n                            <b>\n                              Name :<span>{docname}</span>\n                            </b>\n                            <br></br>\n                            <b>\n                              License Number :<span>{license}</span>\n                            </b>\n                            <br></br>\n                            <b>\n                              Hospital Name :<span>{hname}</span>\n                            </b>\n                            <br></br>\n                            <b>\n                              Faculty :<span>{faculty}</span>\n                            </b>\n                            <br />\n                            <b>\n                              Contact :<span>{contact}</span>\n                            </b>\n                            <br></br>\n                          </div>\n                        </div>\n                      </Tab.Pane>\n                      {/* End Doctor Details */}\n\n                      {/* Access Record Tab*/}\n                      <Tab.Pane eventKey=\"access_record\">\n                        <div className=\"Details\">\n                          <h4>....Welcome to the meDossier....</h4>\n                          <h4>\n                            ..Before you access the records, ask the patient for\n                            the permission..\n                          </h4>\n                        </div>\n                        {/* Enter Address Container */}\n                        <div class=\"small card\">\n                          <h5>\n                            <b>Enter the address of Patient:</b>\n                          </h5>\n                          <TextField\n                            id=\"outlined-basic full-width\"\n                            fullWidth\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            label=\"Patient Account Address\"\n                            onChange={(e) => setAccountAddr(e.target.value)}\n                          />\n                          <Button\n                            onClick={getPatientDetails}\n                            variant=\"contained\"\n                            style={{\n                              backgroundColor: \"#0080FF\",\n                              color: \"floralwhite\",\n                              height: \"10\",\n                              alignSelf: \"end\",\n                            }}\n                          >\n                            Get Record\n                          </Button>\n                        </div>\n                        {/* End Enter Address Container */}\n\n                        {/* Patient Details */}\n                        <div class=\"small card\">\n                          <Card>\n                            <h4>Patient Name: </h4>\n                            <b>Account Address:</b>\n                            <div className=\"smallcard\">\n                              <div>\n                                Name:{name}\n                                {\"\\t\\t\"}\n                              </div>\n                              <div>Phone:{phone}</div>\n                              <div>DoB:{dob}</div>\n                              <div>Gender:{gender}</div>\n                              <div>Blood Group:{blood}</div>\n                            </div>\n                          </Card>\n\n                          <div className=\"table\">\n                            <Box mt={3} mb={3}>\n                              <TableContainer component={Paper}>\n                                <Table size={\"small\"}>\n                                  <TableHead>\n                                    <TableRow>\n                                      <StyledTableCell>\n                                        Doctor Name\n                                      </StyledTableCell>\n                                      <StyledTableCell>Reason</StyledTableCell>\n                                      <StyledTableCell>\n                                        Visited Date\n                                      </StyledTableCell>\n                                      <StyledTableCell>Report</StyledTableCell>\n                                    </TableRow>\n                                  </TableHead>\n                                  <TableBody>\n                                    {records.map((record, index) => {\n                                      return (\n                                        <StyledTableRow key={index}>\n                                          <TableCell>\n                                            {record[\"dname\"]}\n                                          </TableCell>\n                                          <TableCell>\n                                            {record[\"reason\"]}\n                                          </TableCell>\n                                          <TableCell>\n                                            {record[\"visDate\"]}\n                                          </TableCell>\n                                          <TableCell>\n                                            <a\n                                              href={\n                                                \"https://ipfs.io/ipfs/\" +\n                                                record[\"ipfs\"]\n                                              }\n                                              target=\"_blrowank\"\n                                            >\n                                              View/Download Record\n                                            </a>\n                                          </TableCell>\n                                        </StyledTableRow>\n                                      );\n                                    })}\n                                  </TableBody>\n                                </Table>\n                              </TableContainer>\n                            </Box>\n                          </div>\n                        </div>\n                        {/* End Patient Details */}\n\n                        {/* view patient records */}\n\n                        {/* End Patient Record */}\n                      </Tab.Pane>\n                      {/* End Access Record */}\n\n                      {/* Add Record */}\n                      <Tab.Pane eventKey=\"add_record\">\n                        <div className=\"Details\">\n                          <h4>....Welcome to the meDossier....</h4>\n                          <h4>..Upload the new records of your patients..</h4>\n                        </div>\n                        <div className=\"card\">\n                          <h3>Add Records</h3>\n                          <hr></hr>\n                          <form>\n                            <TextField\n                              id=\"outlined-basic full-width\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Patient Account Address\"\n                              onChange={(e) => setAccountAddr(e.target.value)}\n                            />\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Doctor Name\"\n                              value={docname}\n                              onChange={(e) => setDname({ docname })}\n                            />\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Visit Reason\"\n                              onChange={(e) => setReason(e.target.value)}\n                            ></TextField>\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              type=\"date\"\n                              label=\"Visited Date\"\n                              onChange={(e) => setVisDate(e.target.value)}\n                              InputLabelProps={{ shrink: true }}\n                            ></TextField>\n                            <TextField\n                              type=\"file\"\n                              label=\"Report\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{ shrink: true }}\n                              onChange={captureFile}\n                            ></TextField>\n                            <Button\n                              onClick={addPatientRecord}\n                              variant=\"contained\"\n                              fullWidth\n                              margin=\"normal\"\n                              style={{\n                                backgroundColor: \"#0080FF\",\n                                color: \"floralwhite\",\n                              }}\n                            >\n                              Add Record\n                            </Button>\n                          </form>\n                        </div>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DocDashboard;\n\n//Check the functions of the contract\n// const gas = await contract.methods.addPatient(\"name\",\"hname\",\"contact\",\"faculty\",\"blue\").estimateGas();\n// const result = await contract.methods.addPatient(\"name\",\"hname\",\"contact\",\"faculty\",\"blue\").send({from: currentAccount, gas: 1000000});\n// const gas = await contract.methods.addDoctor(\"name\",\"hname\",\"contact\",\"faculty\").estimateGas();\n// const result = await contract.methods.addDoctor(\"name\",\"hname\",\"contact\",\"faculty\").send({from: currentAccount, gas: 1000000}); // const gas = await contract.methods.grantAccess(\"0xAb5d5d8C5E257d35E41f955693b42d628C126A2E\").estimateGas();\n// const result = await contract.methods.grantAccess(\"0xc52Bb0B6A662859B2E182524585b2F0a676F7823\").send({from: currentAccount,gas:1000000});\n// console.log(result)\n// const gas = await contract.methods.grantAccess(\"0xAb5d5d8C5E257d35E41f955693b42d628C126A2E\").estimateGas();\n// const result = await contract.methods.grantAccess(\"0xc52Bb0B6A662859B2E182524585b2F0a676F7823\").send({from: currentAccount,gas:1000000});\n// console.log(result)\n","/home/ranju/location/meDossier/frontend/src/pages/render.js",["72","73","74","75","76"],"import React,{useState ,useEffect} from \"react\";\nimport { Switch ,Route ,Router} from \"react-router-dom\";\nimport Register from './home';\nimport getWeb3 from '../getWeb3';\nimport history from './history';\nimport Patient from './patients_dashboard';\nimport DocDashboard from './doctor_dashboard';\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport Verifier from \"./registrer_dashboard\";\n\n\nfunction Render() {\n  \n const[currentAccount,setCurrentAccount]= useState('');\n const[contract, setContract] = useState({});\n const[user,setUser] = useState([]);\n const getWeb3Data = async()=>{\n   try{\n      //obtain web3 from getWeb3\n      const web3 = await getWeb3();\n      //obtain the accounts\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n//initialize contract\n      const instance = await new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setCurrentAccount(accounts[0]);\n      setContract({...instance});\n   }\n   catch(error){\n     alert(\"Cannot load web3 ,contract. Consult console for details\");\n     console.log(error);\n   }\n }\n  //Register Patient\n  const patientRegister = async(name,phone,gender,dob,blood)=>{\n    try{\n      console.log(name,phone,gender,dob,blood);\n      console.log(currentAccount);\n      await contract.methods.addPatient(name,phone,gender,dob,blood).send({from:currentAccount,gas:1000000});\n      // await getWeb3Data();\n    }\n    catch(error){\n      console.log(error);\n    }\n  }\n  //Register/Add Doctor\n  const doctorRegister = async(name,hname,contact,faculty,license)=>{\n    try{\n      console.log(name,hname,contact,faculty);\n      const result = await contract.methods.addDoctor(name,hname,contact,faculty,license).send({from:currentAccount,gas:1000000});\n      // await getWeb3Data();\n\n    }\ncatch(error){\n  console.log(error);\n}\n  }\n  //Handle  patient Login\n  const handlelogin = async()=>{\n    localStorage.setItem('currentAccount',currentAccount)\n    const result = await contract.methods.user(currentAccount).call({from:currentAccount});\n    console.log(result);\n    if(result==0){\n      try{\n        console.log(\"success\");\n        const registered = await contract.methods.isRegistered(currentAccount).call({from:currentAccount});\n        if(registered){\n          const doctor = await contract.methods.getDoctorByAddress(currentAccount).call({from:currentAccount});\nif(doctor.isApproved==false){\n  await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n\n}\n        \n        // await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n        // const doctor = await contract.methods.getDoctorByAddress(currentAccount).call({from:currentAccount});\n        setUser(doctor);\n        localStorage.setItem('docname',doctor.name)\n        localStorage.setItem('faculty',doctor.faculty)\n        localStorage.setItem('contact',doctor.contact)\n        localStorage.setItem('isApproved',doctor.isApproved)\n        localStorage.setItem('license',doctor.licenseno)\n        localStorage.setItem('hname',doctor.hname)\n        localStorage.setItem('isdoctor','true')\n\n        console.log(doctor)\n          history.push('/doctor_dashboard')\n        }\n        else{\n          alert(\"Your License is not registered! Please register first to access meDossier.\")\n        }\n        // }\n        \n      }\n      catch(error){\n        console.error(error);\n        // alert(error)\n        alert(\"No records found\")\n      }\n    }\n    else if(result==1){\n      try{\n        console.log(\"sucess\");\n        const patient = await contract.methods.getPatientDetails(currentAccount).call({from:currentAccount});\n\n        setUser(patient);\n        console.log(patient)\n        // if(patient.length!==0){\n          // getPatientRecord();\n         localStorage.setItem('name',patient._name)\n        localStorage.setItem('phone',patient._phone)\n        localStorage.setItem('dob',patient._dob)\n        localStorage.setItem('bloodgroup',patient._bloodgroup)\n        localStorage.setItem('gender',patient._gender)\n        // localStorage.setItem('ispatient','true')\n        localStorage.setItem('ispatient',\"true\")\n\n        \n        // localStorage.setItem('hname',doctor.hname)\n  \n          history.push('/patient')\n        // }\n        \n      }\n      catch(error){\n        console.error(error);\n        // alert(error)\n        alert(\"No records found\")\n      }\n    }\n    else if(result==2) {\n     localStorage.setItem('isUser','true');\n      \n        history.push('/registration')\n  \n    }\n    else{\n      alert(\"User not registered!\")\n    }\n   \n  }\n//Patient grant Access to doctor\n  const grantAccess = async(doctor)=>{\n    try{\n      await contract.methods.grantAccess(doctor).send({from:currentAccount,gas:1000000})\n    }\n    catch(error){\n      console.error(error);\n    }\n  }\n  //Patient revoke access from doctor\n  const revokeAccess = async(doctor)=>{\n    try{\n      console.log(doctor)\n      await contract.methods.revoke_access(doctor).send({from:currentAccount,gas:1000000})\n    }\n    catch(error){\n      console.error(error);\n      alert(error);\n    }\n  }\n\n  const logout=() =>{\n    localStorage.clear()\n    history.push('/')\n    window.location.reload(false);\n  }\n  \n  useEffect(()=>{\n    getWeb3Data();\n  },[]);\n  return (\n    \n      // <div className =\"Main\">\n        <Router history={history}>\n        <Switch>\n          <Route path ='/' exact>\n          <Register\n          patientRegister={patientRegister}\n          doctorRegister ={doctorRegister}\n          handlelogin ={handlelogin}\n\n          />\n          </Route>\n          <Route path ='/patient'>\n            <Patient\n            patient={user}\n            grantAccess ={grantAccess}\n            revokeAccess ={revokeAccess}\n            logout ={logout}\n\n            // getPatientRecord ={getPatientRecord}\n            // records ={records}\n            />\n          </Route>\n          <Route exact path = \"/doctor_dashboard\">\n          <DocDashboard \n          doctor = {user}\n          logout ={logout}\n          currentAccount ={currentAccount}\n          />\n          \n          </Route>\n          <Route exact path = \"/registration\">\n          <Verifier \n          owner = {user}\n          logout ={logout}\n\n          />\n          \n          </Route>\n          \n          </Switch>\n          </Router>\n  \n      // </div>\n    )\n  }\n\nexport default Render","/home/ranju/location/meDossier/frontend/src/config.js",[],"/home/ranju/location/meDossier/frontend/src/getWeb3.js",[],"/home/ranju/location/meDossier/frontend/src/pages/history.js",[],"/home/ranju/location/meDossier/frontend/src/pages/registrer_dashboard.js",["77","78","79","80","81","82"],"import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableHead,\n  TableContainer,\n  TableBody,\n  TableCell,\n  TableRow,\n  Card,\n  Box,\n  Paper,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Tabs, Tab, Row, Col, Nav, Navbar } from \"react-bootstrap\";\nimport \"./general.css\";\nimport logo from \"./logo.png\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport history from \"./history\";\n\n//main dashboard\nfunction Verifier(props) {\n  const [recordlen, setRecordLength] = useState(0);\n  const [records, setRecords] = useState([]);\n  const [dname, setDname] = useState(\"\");\n  const [license, setLicense] = useState(0);\n\n  const currentAccount = localStorage.getItem(\"currentAccount\");\n  const isDoctor = localStorage.getItem(\"isdoctor\");\n  const ispatient = localStorage.getItem(\"ispatient\");\n\n  const web3 = new Web3(Web3.givenProvider);\n  const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\n  const Register = async (e) => {\n    try {\n      //whether doctor is authorized or not\n\n      await contract.methods\n        .registerDoctor(dname, license)\n        .send({ from: currentAccount, gas: 1000000 });\n    } catch (error) {\n      console.log(error);\n      alert(\"Error in Registration\");\n    }\n  };\n\n  const getDoctorsList = async (e) => {\n    try {\n      //check whether doctor is authorized or not\n\n      //get the number of records\n      const rlen = await contract.methods.getRegisteredDoctorslength().call();\n      console.log(\"record length\" + rlen);\n      setRecordLength(rlen);\n\n      let record = [];\n      for (var i = 0; i < recordlen; i++) {\n        const licn = await contract.methods\n          .getRegisteredDoctorsList(i)\n          .call({ from: currentAccount });\n        console.log(licn);\n        try {\n          const result = await contract.methods\n            .getDoctorbyLicense(licn)\n            .call({ from: currentAccount });\n          console.log(result);\n          record.push({\n            dname: result.name,\n            hname: result.hospital,\n            faculty: result._faculty,\n            license: licn,\n          });\n        } catch {\n          record.push({\n            dname: \"No account/Not Logged in After Registration\",\n            hname: \"----\",\n            faculty: \"----\",\n            license: licn,\n          });\n        }\n      }\n      console.log(record);\n      setRecords(record);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDoctorsList();\n    // getDoctorDetails();\n  }, [recordlen]);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n  const classes = useStyles();\n\n  //Styling for table cell\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.info.main,\n      color: theme.palette.common.blue,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  if (!currentAccount) {\n    history.push(\"/\");\n  }\n  if (isDoctor == \"true\") {\n    history.push(\"/doctor_dashboard\");\n  }\n\n  if (ispatient == \"true\") {\n    history.push(\"/patient\");\n  }\n\n  return (\n    <div className=\"Registrer\">\n      <div className=\"nav_main\">\n        {getDoctorsList}\n        <Navbar\n          // bg=\"light\"\n          color=\"purple\"\n          expand=\"lg\"\n        >\n          <img\n            src={logo}\n            width=\"120\"\n            height=\"40\"\n            className=\"d-inline-block align-top\"\n          />\n          {/* patient */}\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav.Link a href=\"/registration\">\n              {\" \"}\n              <i class=\"far fa-1x fa-user-circle\">\n                {\" \"}\n                <b>License Registration Office</b>{\" \"}\n              </i>{\" \"}\n            </Nav.Link>\n            <Button onClick={(e) => props.logout()}>\n              {\" \"}\n              <i class=\"fas fa-1x fa-sign-out-alt\" /> Log out\n            </Button>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n      {/* End Navbar */}\n\n      {/* Side Tabs */}\n      <div className=\"tab-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <Tab.Container defaultActiveKey=\"doctors_list\">\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <div>\n                        <Nav.Item>\n                          <Nav.Link eventKey=\"doctors_list\">\n                            <b> Registered Doctors</b>\n                          </Nav.Link>\n                          <hr />\n                        </Nav.Item>\n                      </div>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"new_registration\">\n                          {\" \"}\n                          <b>New Registration </b>\n                        </Nav.Link>\n                        <hr />\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <Tab.Content>\n                      {/* Doctors Details */}\n                      <Tab.Pane eventKey=\"doctors_list\">\n                        <div className=\"Details\">\n                          <h3>Welcome to the MeDossier</h3>\n                          <br />\n                          <h5>The Following Doctors are Registered</h5>\n                        </div>\n\n                        {/* Registered Doctor List */}\n                        <div class=\"small-card\">\n                          <div className=\"table\">\n                            <Box mt={3} mb={3}>\n                              <Paper className={classes.root}>\n                                <TableContainer className={classes.container}>\n                                  <Table\n                                    className={classes.table}\n                                    size={\"small\"}\n                                    stickyHeader\n                                    aria-label=\"sticky table\"\n                                  >\n                                    <TableHead>\n                                      <TableRow>\n                                        <StyledTableCell>\n                                          License\n                                        </StyledTableCell>\n                                        <StyledTableCell>Name</StyledTableCell>\n                                        <StyledTableCell>\n                                          Faculty\n                                        </StyledTableCell>\n                                        <StyledTableCell>\n                                          Working Hospital\n                                        </StyledTableCell>\n                                      </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                      {records.map((record, index) => {\n                                        return (\n                                          <StyledTableRow key={index}>\n                                            <TableCell>\n                                              {record[\"license\"]}\n                                            </TableCell>\n                                            <TableCell>\n                                              {record[\"dname\"]}\n                                            </TableCell>\n                                            <TableCell>\n                                              {record[\"faculty\"]}\n                                            </TableCell>\n                                            <TableCell>\n                                              {record[\"hname\"]}\n                                            </TableCell>\n                                          </StyledTableRow>\n                                        );\n                                      })}\n                                    </TableBody>\n                                  </Table>\n                                </TableContainer>\n                              </Paper>\n                            </Box>\n                          </div>\n                        </div>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"new_registration\">\n                        <div className=\"Details\">\n                          <h3>Welcome to the MeDossier</h3>\n                          <br />\n                          <h5>New Doctor Registration</h5>\n                        </div>\n                        <div className=\"small card\">\n                          <h3>Register Doctor</h3>\n                          <hr></hr>\n                          <form>\n                            <TextField\n                              id=\"outlined-basic full-width\"\n                              fullWidth={true}\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"License Number\"\n                              // style ={{height:60}}\n                              onChange={(e) => setLicense(e.target.value)}\n                            />\n                            <TextField\n                              id=\"outlined-basic\"\n                              fullWidth={true}\n                              variant=\"outlined\"\n                              margin=\"normal\"\n                              label=\"Doctor Name\"\n                              onChange={(e) => setDname(e.target.value)}\n                            />\n\n                            <Button\n                              onClick={Register}\n                              variant=\"contained\"\n                              fullWidth\n                              margin=\"normal\"\n                              style={{\n                                backgroundColor: \"#0080FF\",\n                                color: \"floralwhite\",\n                              }}\n                            >\n                              Register\n                            </Button>\n                          </form>\n                        </div>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Verifier;\n","/home/ranju/location/meDossier/frontend/src/ipfs.js",[],{"ruleId":"83","severity":1,"message":"84","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":19},{"ruleId":"83","severity":1,"message":"87","line":2,"column":17,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"88","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"89","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":24},{"ruleId":"83","severity":1,"message":"90","line":26,"column":9,"nodeType":"85","messageId":"86","endLine":26,"endColumn":19},{"ruleId":"83","severity":1,"message":"91","line":45,"column":9,"nodeType":"85","messageId":"86","endLine":45,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":83,"column":6,"nodeType":"94","endLine":83,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":258,"column":18,"nodeType":"98","messageId":"99","endLine":258,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":261,"column":17,"nodeType":"98","messageId":"99","endLine":261,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":294,"column":23,"nodeType":"102","messageId":"103","endLine":297,"endColumn":24,"fix":"104"},{"ruleId":"96","severity":1,"message":"97","line":364,"column":16,"nodeType":"98","messageId":"99","endLine":364,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":367,"column":15,"nodeType":"98","messageId":"99","endLine":367,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":374,"column":11,"nodeType":"102","endLine":379,"endColumn":13},{"ruleId":"83","severity":1,"message":"107","line":37,"column":10,"nodeType":"85","messageId":"86","endLine":37,"endColumn":15},{"ruleId":"83","severity":1,"message":"108","line":47,"column":9,"nodeType":"85","messageId":"86","endLine":47,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":183,"column":17,"nodeType":"98","messageId":"99","endLine":183,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":186,"column":15,"nodeType":"98","messageId":"99","endLine":186,"endColumn":17},{"ruleId":"83","severity":1,"message":"109","line":50,"column":13,"nodeType":"85","messageId":"86","endLine":50,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":63,"column":14,"nodeType":"98","messageId":"99","endLine":63,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":69,"column":21,"nodeType":"98","messageId":"99","endLine":69,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":100,"column":19,"nodeType":"98","messageId":"99","endLine":100,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":130,"column":19,"nodeType":"98","messageId":"99","endLine":130,"endColumn":21},{"ruleId":"83","severity":1,"message":"110","line":11,"column":3,"nodeType":"85","messageId":"86","endLine":11,"endColumn":7},{"ruleId":"83","severity":1,"message":"88","line":17,"column":10,"nodeType":"85","messageId":"86","endLine":17,"endColumn":14},{"ruleId":"92","severity":1,"message":"111","line":95,"column":6,"nodeType":"94","endLine":95,"endColumn":17,"suggestions":"112"},{"ruleId":"96","severity":1,"message":"97","line":132,"column":16,"nodeType":"98","messageId":"99","endLine":132,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":136,"column":17,"nodeType":"98","messageId":"99","endLine":136,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":149,"column":11,"nodeType":"102","endLine":154,"endColumn":13},"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Tabs' is defined but never used.","'Row' is defined but never used.","'addressRef' is assigned a value but never used.","'ispatient' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPatientRecord'. Either include it or remove the dependency array.","ArrayExpression",["113"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"114","text":"115"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'dname' is assigned a value but never used.","'isApproved' is assigned a value but never used.","'result' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'getDoctorsList'. Either include it or remove the dependency array.",["116"],{"desc":"117","fix":"118"},[8723,8723]," rel=\"noreferrer\"",{"desc":"119","fix":"120"},"Update the dependencies array to be: [getPatientRecord]",{"range":"121","text":"122"},"Update the dependencies array to be: [getDoctorsList, recordlen]",{"range":"123","text":"124"},[2335,2337],"[getPatientRecord]",[2607,2618],"[getDoctorsList, recordlen]"]