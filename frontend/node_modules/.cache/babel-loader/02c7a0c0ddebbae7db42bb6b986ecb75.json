{"ast":null,"code":"'use strict';\n\nconst resolver = require('./resolver');\n\nconst util = require('./util');\n\nconst DAGNodeClass = require('./dag-node/dagNode');\n\nconst DAGLinkClass = require('./dag-link/dagLink');\n/**\n * @typedef {import('./types').DAGLinkLike} DAGLinkLike\n * @typedef {import('./types').DAGNodeLike} DAGNodeLike\n * @typedef {import('./dag-node/dagNode')} DAGNode\n * @typedef {import('./dag-link/dagLink')} DAGLink\n */\n\n/**\n * @type {import('./types').DAGNodeFormat}\n */\n\n\nconst format = {\n  DAGNode: DAGNodeClass,\n  DAGLink: DAGLinkClass,\n\n  /**\n   * Functions to fulfil IPLD Format interface\n   * https://github.com/ipld/interface-ipld-format\n   */\n  resolver,\n  util,\n  codec: util.codec,\n  defaultHashAlg: util.defaultHashAlg\n};\nmodule.exports = format;","map":{"version":3,"sources":["/home/ranju/location/meDossier/frontend/node_modules/ipfs-http-client/node_modules/ipld-dag-pb/src/index.js"],"names":["resolver","require","util","DAGNodeClass","DAGLinkClass","format","DAGNode","DAGLink","codec","defaultHashAlg","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,oBAAD,CAA5B;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,oBAAD,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,MAAMI,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAEH,YADI;AAEbI,EAAAA,OAAO,EAAEH,YAFI;;AAIb;AACF;AACA;AACA;AACEJ,EAAAA,QARa;AASbE,EAAAA,IATa;AAUbM,EAAAA,KAAK,EAAEN,IAAI,CAACM,KAVC;AAWbC,EAAAA,cAAc,EAAEP,IAAI,CAACO;AAXR,CAAf;AAcAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["'use strict'\n\nconst resolver = require('./resolver')\nconst util = require('./util')\nconst DAGNodeClass = require('./dag-node/dagNode')\nconst DAGLinkClass = require('./dag-link/dagLink')\n\n/**\n * @typedef {import('./types').DAGLinkLike} DAGLinkLike\n * @typedef {import('./types').DAGNodeLike} DAGNodeLike\n * @typedef {import('./dag-node/dagNode')} DAGNode\n * @typedef {import('./dag-link/dagLink')} DAGLink\n */\n\n/**\n * @type {import('./types').DAGNodeFormat}\n */\nconst format = {\n  DAGNode: DAGNodeClass,\n  DAGLink: DAGLinkClass,\n\n  /**\n   * Functions to fulfil IPLD Format interface\n   * https://github.com/ipld/interface-ipld-format\n   */\n  resolver,\n  util,\n  codec: util.codec,\n  defaultHashAlg: util.defaultHashAlg\n}\n\nmodule.exports = format\n"]},"metadata":{},"sourceType":"script"}