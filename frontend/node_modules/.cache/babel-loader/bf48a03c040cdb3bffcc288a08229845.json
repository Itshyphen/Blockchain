{"ast":null,"code":"var _jsxFileName = \"/home/ranju/location/meDossier/frontend/src/pages/render.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Router } from \"react-router-dom\";\nimport Register from './home';\nimport getWeb3 from '../getWeb3';\nimport history from './history';\nimport Patient from './patients_dashboard';\nimport DocDashboard from './doctor_dashboard';\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport Verifier from \"./registrer_dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Render() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [contract, setContract] = useState({});\n  const [user, setUser] = useState([]);\n\n  const getWeb3Data = async () => {\n    try {\n      //obtain web3 from getWeb3\n      const web3 = await getWeb3(); //obtain the accounts\n\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts); //initialize contract\n\n      const instance = await new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setCurrentAccount(accounts[0]);\n      setContract({ ...instance\n      });\n    } catch (error) {\n      alert(\"Cannot load web3 ,contract. Consult console for details\");\n      console.log(error);\n    }\n  }; //Register Patient\n\n\n  const patientRegister = async (name, phone, gender, dob, blood) => {\n    try {\n      console.log(name, phone, gender, dob, blood);\n      console.log(currentAccount);\n      await contract.methods.addPatient(name, phone, gender, dob, blood).send({\n        from: currentAccount,\n        gas: 1000000\n      }); // await getWeb3Data();\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Register/Add Doctor\n\n\n  const doctorRegister = async (name, hname, contact, faculty, license) => {\n    try {\n      console.log(name, hname, contact, faculty);\n      const result = await contract.methods.addDoctor(name, hname, contact, faculty, license).send({\n        from: currentAccount,\n        gas: 1000000\n      }); // await getWeb3Data();\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Handle  patient Login\n\n\n  const handlelogin = async () => {\n    localStorage.setItem('currentAccount', currentAccount);\n    const result = await contract.methods.user(currentAccount).call({\n      from: currentAccount\n    });\n    console.log(result);\n\n    if (result == 0) {\n      try {\n        console.log(\"success\");\n        const registered = await contract.methods.isRegistered(currentAccount).call({\n          from: currentAccount\n        });\n\n        if (registered) {\n          await contract.methods.doctorLogin().send({\n            from: currentAccount,\n            gas: 1000000\n          }); // await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n\n          const doctor = await contract.methods.getDoctorByAddress(currentAccount).call({\n            from: currentAccount\n          });\n          setUser(doctor);\n          localStorage.setItem('docname', doctor.name);\n          localStorage.setItem('faculty', doctor.faculty);\n          localStorage.setItem('contact', doctor.contact);\n          localStorage.setItem('isApproved', doctor.isApproved);\n          localStorage.setItem('license', doctor.licenseno);\n          localStorage.setItem('hname', doctor.hname);\n          console.log(doctor);\n          history.push('/doctor_dashboard');\n        } else {\n          alert(\"Your License is not registered! Please register first to access meDossier.\");\n        } // }\n\n      } catch (error) {\n        console.error(error); // alert(error)\n\n        alert(\"No records found\");\n      }\n    } else if (result == 1) {\n      try {\n        console.log(\"sucess\");\n        const patient = await contract.methods.getPatientDetails(currentAccount).call({\n          from: currentAccount\n        });\n        setUser(patient);\n        console.log(patient); // if(patient.length!==0){\n        // getPatientRecord();\n\n        localStorage.setItem('name', patient._name);\n        localStorage.setItem('phone', patient._phone);\n        localStorage.setItem('dob', patient._dob);\n        localStorage.setItem('bloodgroup', patient._bloodgroup);\n        localStorage.setItem('gender', patient._gender); // localStorage.setItem('hname',doctor.hname)\n\n        history.push('/patient'); // }\n      } catch (error) {\n        console.error(error); // alert(error)\n\n        alert(\"No records found\");\n      }\n    } else if (result == 2) {\n      history.push('/Registration_office');\n    } else {\n      alert(\"User not registered!\");\n    }\n  }; //Patient grant Access to doctor\n\n\n  const grantAccess = async doctor => {\n    try {\n      await contract.methods.grantAccess(doctor).send({\n        from: currentAccount,\n        gas: 1000000\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }; //Patient revoke access from doctor\n\n\n  const revokeAccess = async doctor => {\n    try {\n      console.log(doctor);\n      await contract.methods.revoke_access(doctor).send({\n        from: currentAccount,\n        gas: 1000000\n      });\n    } catch (error) {\n      console.error(error);\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeb3Data();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className =\"Main\">\n    _jsxDEV(Router, {\n      history: history,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            patientRegister: patientRegister,\n            doctorRegister: doctorRegister,\n            handlelogin: handlelogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient\",\n          children: /*#__PURE__*/_jsxDEV(Patient, {\n            patient: user,\n            grantAccess: grantAccess,\n            revokeAccess: revokeAccess,\n            contract: contract,\n            currentAccount: currentAccount // getPatientRecord ={getPatientRecord}\n            // records ={records}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/doctor_dashboard\",\n          children: /*#__PURE__*/_jsxDEV(DocDashboard, {\n            doctor: user,\n            contract: contract,\n            currentAccount: currentAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Registration_office\",\n          children: /*#__PURE__*/_jsxDEV(Verifier, {\n            owner: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) // </div>\n\n  );\n}\n\n_s(Render, \"DnQrX8QuirSPbOZpdIaPIH6Mvq0=\");\n\n_c = Render;\nexport default Render;\n\nvar _c;\n\n$RefreshReg$(_c, \"Render\");","map":{"version":3,"sources":["/home/ranju/location/meDossier/frontend/src/pages/render.js"],"names":["React","useState","useEffect","Switch","Route","Router","Register","getWeb3","history","Patient","DocDashboard","CONTRACT_ADDRESS","ABI","Verifier","Render","currentAccount","setCurrentAccount","contract","setContract","user","setUser","getWeb3Data","web3","accounts","eth","getAccounts","console","log","instance","Contract","error","alert","patientRegister","name","phone","gender","dob","blood","methods","addPatient","send","from","gas","doctorRegister","hname","contact","faculty","license","result","addDoctor","handlelogin","localStorage","setItem","call","registered","isRegistered","doctorLogin","doctor","getDoctorByAddress","isApproved","licenseno","push","patient","getPatientDetails","_name","_phone","_dob","_bloodgroup","_gender","grantAccess","revokeAccess","revoke_access"],"mappings":"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","sourcesContent":["\nimport React,{useState ,useEffect} from \"react\";\nimport { Switch ,Route ,Router} from \"react-router-dom\";\nimport Register from './home';\nimport getWeb3 from '../getWeb3';\nimport history from './history';\nimport Patient from './patients_dashboard';\nimport DocDashboard from './doctor_dashboard';\nimport { CONTRACT_ADDRESS, ABI } from \"../config.js\";\nimport Verifier from \"./registrer_dashboard\";\n\n\nfunction Render() {\n  \n const[currentAccount,setCurrentAccount]= useState('');\n const[contract, setContract] = useState({});\n const[user,setUser] = useState([]);\n\n const getWeb3Data = async()=>{\n   try{\n      //obtain web3 from getWeb3\n      const web3 = await getWeb3();\n      //obtain the accounts\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n//initialize contract\n      const instance = await new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setCurrentAccount(accounts[0]);\n      setContract({...instance});\n   }\n   catch(error){\n     alert(\"Cannot load web3 ,contract. Consult console for details\");\n     console.log(error);\n   }\n }\n  //Register Patient\n  const patientRegister = async(name,phone,gender,dob,blood)=>{\n    try{\n      console.log(name,phone,gender,dob,blood);\n      console.log(currentAccount);\n      await contract.methods.addPatient(name,phone,gender,dob,blood).send({from:currentAccount,gas:1000000});\n      // await getWeb3Data();\n    }\n    catch(error){\n      console.log(error);\n    }\n  }\n  //Register/Add Doctor\n  const doctorRegister = async(name,hname,contact,faculty,license)=>{\n    try{\n      console.log(name,hname,contact,faculty);\n      const result = await contract.methods.addDoctor(name,hname,contact,faculty,license).send({from:currentAccount,gas:1000000});\n      // await getWeb3Data();\n\n    }\ncatch(error){\n  console.log(error);\n}\n  }\n  //Handle  patient Login\n  const handlelogin = async()=>{\n    localStorage.setItem('currentAccount',currentAccount)\n    const result = await contract.methods.user(currentAccount).call({from:currentAccount});\n    console.log(result);\n    if(result==0){\n      try{\n        console.log(\"success\");\n        const registered = await contract.methods.isRegistered(currentAccount).call({from:currentAccount});\n        if(registered){\n          await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n        \n        // await contract.methods.doctorLogin().send({from:currentAccount,gas:1000000})\n        const doctor = await contract.methods.getDoctorByAddress(currentAccount).call({from:currentAccount});\n        setUser(doctor);\n        localStorage.setItem('docname',doctor.name)\n        localStorage.setItem('faculty',doctor.faculty)\n        localStorage.setItem('contact',doctor.contact)\n        localStorage.setItem('isApproved',doctor.isApproved)\n        localStorage.setItem('license',doctor.licenseno)\n        localStorage.setItem('hname',doctor.hname)\n        console.log(doctor)\n          history.push('/doctor_dashboard')\n        }\n        else{\n          alert(\"Your License is not registered! Please register first to access meDossier.\")\n        }\n        // }\n        \n      }\n      catch(error){\n        console.error(error);\n        // alert(error)\n        alert(\"No records found\")\n      }\n    }\n    else if(result==1){\n      try{\n        console.log(\"sucess\");\n        const patient = await contract.methods.getPatientDetails(currentAccount).call({from:currentAccount});\n        setUser(patient);\n        console.log(patient)\n        // if(patient.length!==0){\n          // getPatientRecord();\n         localStorage.setItem('name',patient._name)\n        localStorage.setItem('phone',patient._phone)\n        localStorage.setItem('dob',patient._dob)\n        localStorage.setItem('bloodgroup',patient._bloodgroup)\n        localStorage.setItem('gender',patient._gender)\n        // localStorage.setItem('hname',doctor.hname)\n  \n          history.push('/patient')\n        // }\n        \n      }\n      catch(error){\n        console.error(error);\n        // alert(error)\n        alert(\"No records found\")\n      }\n    }\n    else if(result==2) {\n      \n        history.push('/Registration_office')\n  \n    }\n    else{\n      alert(\"User not registered!\")\n    }\n   \n  }\n\n//Patient grant Access to doctor\n  const grantAccess = async(doctor)=>{\n    try{\n      await contract.methods.grantAccess(doctor).send({from:currentAccount,gas:1000000})\n    }\n    catch(error){\n      console.error(error);\n    }\n  }\n  //Patient revoke access from doctor\n  const revokeAccess = async(doctor)=>{\n    try{\n      console.log(doctor)\n      await contract.methods.revoke_access(doctor).send({from:currentAccount,gas:1000000})\n    }\n    catch(error){\n      console.error(error);\n      alert(error);\n    }\n  }\n  \n  useEffect(()=>{\n    getWeb3Data();\n  },[]);\n  return (\n    \n      // <div className =\"Main\">\n        <Router history={history}>\n        <Switch>\n          <Route path ='/' exact>\n          <Register\n          patientRegister={patientRegister}\n          doctorRegister ={doctorRegister}\n          handlelogin ={handlelogin}\n\n          />\n          </Route>\n          <Route path ='/patient'>\n            <Patient\n            patient={user}\n            grantAccess ={grantAccess}\n            revokeAccess ={revokeAccess}\n            contract ={contract}\n            currentAccount ={currentAccount}\n            // getPatientRecord ={getPatientRecord}\n            // records ={records}\n            />\n          </Route>\n          <Route exact path = \"/doctor_dashboard\">\n          <DocDashboard \n          doctor = {user}\n          contract ={contract}\n          currentAccount ={currentAccount}\n          />\n          \n          </Route>\n          <Route exact path = \"/Registration_office\">\n          <Verifier \n          owner = {user}\n          />\n          \n          </Route>\n          \n          </Switch>\n          </Router>\n  \n      // </div>\n    )\n  }\n\nexport default Render"]},"metadata":{},"sourceType":"module"}