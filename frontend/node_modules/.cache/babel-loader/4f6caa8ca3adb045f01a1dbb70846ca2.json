{"ast":null,"code":"'use strict';\n\nconst sort = require('stable');\n\nconst uint8ArrayCompare = require('uint8arrays/compare');\n/**\n * @typedef {import('../dag-link/dagLink')} DAGLink\n */\n\n/**\n *\n * @param {DAGLink} a\n * @param {DAGLink} b\n */\n\n\nconst linkSort = (a, b) => {\n  const buf1 = a.nameAsBuffer;\n  const buf2 = b.nameAsBuffer;\n  return uint8ArrayCompare(buf1, buf2);\n};\n/**\n * Sorts links in place (mutating given array)\n *\n * @param {DAGLink[]} links\n * @returns {void}\n */\n\n\nconst sortLinks = links => {\n  sort.inplace(links, linkSort);\n};\n\nmodule.exports = sortLinks;","map":{"version":3,"sources":["/home/ranju/location/meDossier/frontend/node_modules/ipfs-http-client/node_modules/ipld-dag-pb/src/dag-node/sortLinks.js"],"names":["sort","require","uint8ArrayCompare","linkSort","a","b","buf1","nameAsBuffer","buf2","sortLinks","links","inplace","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAME,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,QAAMC,IAAI,GAAGF,CAAC,CAACG,YAAf;AACA,QAAMC,IAAI,GAAGH,CAAC,CAACE,YAAf;AAEA,SAAOL,iBAAiB,CAACI,IAAD,EAAOE,IAAP,CAAxB;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3BV,EAAAA,IAAI,CAACW,OAAL,CAAaD,KAAb,EAAoBP,QAApB;AACD,CAFD;;AAIAS,MAAM,CAACC,OAAP,GAAiBJ,SAAjB","sourcesContent":["'use strict'\n\nconst sort = require('stable')\nconst uint8ArrayCompare = require('uint8arrays/compare')\n\n/**\n * @typedef {import('../dag-link/dagLink')} DAGLink\n */\n\n/**\n *\n * @param {DAGLink} a\n * @param {DAGLink} b\n */\nconst linkSort = (a, b) => {\n  const buf1 = a.nameAsBuffer\n  const buf2 = b.nameAsBuffer\n\n  return uint8ArrayCompare(buf1, buf2)\n}\n\n/**\n * Sorts links in place (mutating given array)\n *\n * @param {DAGLink[]} links\n * @returns {void}\n */\nconst sortLinks = (links) => {\n  sort.inplace(links, linkSort)\n}\n\nmodule.exports = sortLinks\n"]},"metadata":{},"sourceType":"script"}