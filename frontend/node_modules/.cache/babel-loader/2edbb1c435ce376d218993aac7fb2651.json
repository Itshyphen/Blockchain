{"ast":null,"code":"var _jsxFileName = \"/home/ranju/location/meDossier/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\n// import WebPage from './pages/pages';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <WebPage />    \n//     </div>\n//   );\n// }\n// export default App;\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Router } from \"react-router-dom\";\nimport Register from './pages/home';\nimport { CONTRACT_ADDRESS, ABI } from \"./config.js\";\nimport getWeb3 from './getWeb3';\nimport history from './pages/history';\nimport Patient from './pages/patients_dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [contract, setContract] = useState({});\n  const [patient, setPatient] = useState([]);\n\n  const getWeb3Data = async () => {\n    try {\n      //obtain web3 from getWeb3\n      const web3 = await getWeb3(); //obtain the accounts\n\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts); //obtain netwrokID\n      //  const netwrokID = await web3.eth.net.getId();\n      //  console.log(netwrokID);\n      //  const networkdeployed = Contract.networks[netwrokID];\n      //  console.log(networkdeployed);\n\n      const instance = await new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setCurrentAccount(accounts[0]);\n      setContract({ ...instance\n      }); //Just to confirm working of addPatient and addDoctor function \n      //  const patient = await instance.methods.getPatientDetails(accounts[0]).call();\n      //  console.log(patient);\n      //  const doctor = await instance.methods.getDoctorByAddress(accounts[0]).call();\n      //  console.log(doctor);\n    } catch (error) {\n      alert(\"Cannot load web3 ,contract. Consult console for details\");\n      console.log(error);\n    }\n  }; //Register Patient\n\n\n  const patientRegister = async (name, phone, gender, dob, blood) => {\n    try {\n      console.log(name, phone, gender, dob, blood);\n      contract.methods.addPatient(name, phone, gender, dob, blood).send({\n        from: currentAccount\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Register/Add Doctor\n\n\n  const doctorRegister = async (name, hname, contact, faculty) => {\n    try {\n      console.log(name, contact, faculty);\n      contract.methods.addDoctor(name, hname, contact, faculty).send({\n        from: currentAccount\n      });\n      await getWeb3Data();\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Handle  patient Login\n\n\n  const phandlelogin = async () => {\n    try {\n      console.log(\"sucess\");\n      const patient = await contract.methods.getPatientDetails(currentAccount).call();\n      setPatient(patient);\n      console.log(patient); // if(patient.length!==0){\n\n      history.push('/patient'); // }\n    } catch (error) {\n      console.error(error); // alert(error)\n\n      alert(\"No records found\");\n    }\n  }; //Patient grant Access to doctor\n\n\n  const grantAccess = async doctor => {\n    try {\n      contract.methods.grantAccess(doctor).send({\n        from: currentAccount\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }; //Patient revoke access from doctor\n\n\n  const revokeAccess = async doctor => {\n    try {\n      contract.methods.revoke_access(doctor).send({\n        from: currentAccount\n      });\n    } catch (error) {\n      console.error(error);\n      alert(error);\n    }\n  }; //Handle Doctor Login\n\n\n  const dhandlelogin = async () => {\n    try {\n      console.log(\"doctor\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeb3Data();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className =\"Main\">\n    _jsxDEV(Router, {\n      history: history,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            patientRegister: patientRegister,\n            doctorRegister: doctorRegister,\n            phandlelogin: phandlelogin,\n            dhandlelogin: dhandlelogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient\",\n          children: /*#__PURE__*/_jsxDEV(Patient, {\n            patient: patient,\n            grantAccess: grantAccess,\n            revokeAccess: revokeAccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) // </div>\n\n  );\n}\n\n_s(App, \"WCjhAo8EjxWNaDw8CYxMxbUmCpc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ranju/location/meDossier/frontend/src/App.js"],"names":["React","useState","useEffect","Switch","Route","Router","Register","CONTRACT_ADDRESS","ABI","getWeb3","history","Patient","App","currentAccount","setCurrentAccount","contract","setContract","patient","setPatient","getWeb3Data","web3","accounts","eth","getAccounts","console","log","instance","Contract","error","alert","patientRegister","name","phone","gender","dob","blood","methods","addPatient","send","from","doctorRegister","hname","contact","faculty","addDoctor","phandlelogin","getPatientDetails","call","push","grantAccess","doctor","revokeAccess","revoke_access","dhandlelogin"],"mappings":";;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAqC,kBAArC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,gBAAR,EAAyBC,GAAzB,QAAoC,aAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAK,CAACC,cAAD,EAAgBC,iBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAK,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAK,CAACgB,OAAD,EAASC,UAAT,IAAuBjB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMkB,WAAW,GAAG,YAAS;AAC3B,QAAG;AACD;AACA,YAAMC,IAAI,GAAG,MAAMX,OAAO,EAA1B,CAFC,CAGD;;AACA,YAAMY,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EALC,CAMD;AACD;AACA;AACA;AACA;;AACC,YAAMK,QAAQ,GAAG,MAAM,IAAIN,IAAI,CAACE,GAAL,CAASK,QAAb,CAAsBnB,GAAtB,EAA0BD,gBAA1B,CAAvB;AACAO,MAAAA,iBAAiB,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACAL,MAAAA,WAAW,CAAC,EAAC,GAAGU;AAAJ,OAAD,CAAX,CAbC,CAcD;AACD;AACA;AACA;AACA;AAGA,KArBD,CAsBA,OAAME,KAAN,EAAY;AACVC,MAAAA,KAAK,CAAC,yDAAD,CAAL;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,GA3BD,CAJc,CAgCb;;;AACA,QAAME,eAAe,GAAG,OAAMC,IAAN,EAAWC,KAAX,EAAiBC,MAAjB,EAAwBC,GAAxB,EAA4BC,KAA5B,KAAoC;AAC1D,QAAG;AACDX,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAAiBC,KAAjB,EAAuBC,MAAvB,EAA8BC,GAA9B,EAAkCC,KAAlC;AACApB,MAAAA,QAAQ,CAACqB,OAAT,CAAiBC,UAAjB,CAA4BN,IAA5B,EAAiCC,KAAjC,EAAuCC,MAAvC,EAA8CC,GAA9C,EAAkDC,KAAlD,EAAyDG,IAAzD,CAA8D;AAACC,QAAAA,IAAI,EAAC1B;AAAN,OAA9D;AACD,KAHD,CAIA,OAAMe,KAAN,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,GARD,CAjCa,CA0Cb;;;AACA,QAAMY,cAAc,GAAG,OAAMT,IAAN,EAAWU,KAAX,EAAiBC,OAAjB,EAAyBC,OAAzB,KAAmC;AACxD,QAAG;AACDnB,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAAiBW,OAAjB,EAAyBC,OAAzB;AACA5B,MAAAA,QAAQ,CAACqB,OAAT,CAAiBQ,SAAjB,CAA2Bb,IAA3B,EAAgCU,KAAhC,EAAsCC,OAAtC,EAA8CC,OAA9C,EAAuDL,IAAvD,CAA4D;AAACC,QAAAA,IAAI,EAAC1B;AAAN,OAA5D;AACA,YAAMM,WAAW,EAAjB;AAED,KALD,CAMJ,OAAMS,KAAN,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACE,GAVD,CA3Ca,CAsDb;;;AACA,QAAMiB,YAAY,GAAG,YAAS;AAC5B,QAAG;AACDrB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMR,OAAO,GAAG,MAAMF,QAAQ,CAACqB,OAAT,CAAiBU,iBAAjB,CAAmCjC,cAAnC,EAAmDkC,IAAnD,EAAtB;AACA7B,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAJC,CAKD;;AACEP,MAAAA,OAAO,CAACsC,IAAR,CAAa,UAAb,EAND,CAOD;AAED,KATD,CAUA,OAAMpB,KAAN,EAAY;AACVJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd,EADU,CAEV;;AACAC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,GAhBD,CAvDa,CAwEf;;;AACE,QAAMoB,WAAW,GAAG,MAAMC,MAAN,IAAe;AACjC,QAAG;AACAnC,MAAAA,QAAQ,CAACqB,OAAT,CAAiBa,WAAjB,CAA6BC,MAA7B,EAAqCZ,IAArC,CAA0C;AAACC,QAAAA,IAAI,EAAC1B;AAAN,OAA1C;AACF,KAFD,CAGA,OAAMe,KAAN,EAAY;AACVJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD;AACF,GAPD,CAzEa,CAiFb;;;AACA,QAAMuB,YAAY,GAAG,MAAMD,MAAN,IAAe;AAClC,QAAG;AACDnC,MAAAA,QAAQ,CAACqB,OAAT,CAAiBgB,aAAjB,CAA+BF,MAA/B,EAAuCZ,IAAvC,CAA4C;AAACC,QAAAA,IAAI,EAAC1B;AAAN,OAA5C;AACD,KAFD,CAGA,OAAMe,KAAN,EAAY;AACVJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACAC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,GARD,CAlFa,CA2Fb;;;AACA,QAAMyB,YAAY,GAAG,YAAS;AAC5B,QAAG;AACD7B,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAFD,CAGA,OAAMG,KAAN,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,GAPD;;AAQA1B,EAAAA,SAAS,CAAC,MAAI;AACZiB,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;AAGA;AAAA;AAEI;AACE,YAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,OAAjB;AAAA,6BACA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,GAAb;AAAiB,UAAA,KAAK,MAAtB;AAAA,iCACA,QAAC,QAAD;AACA,YAAA,eAAe,EAAEoB,eADjB;AAEA,YAAA,cAAc,EAAGU,cAFjB;AAGA,YAAA,YAAY,EAAGK,YAHf;AAIA,YAAA,YAAY,EAAGQ;AAJf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,UAAb;AAAA,iCACE,QAAC,OAAD;AACA,YAAA,OAAO,EAAEpC,OADT;AAEA,YAAA,WAAW,EAAGgC,WAFd;AAGA,YAAA,YAAY,EAAGE;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHN,CAsBI;;AAtBJ;AAuBI;;GA9HGvC,G;;KAAAA,G;AAgIT,eAAeA,GAAf","sourcesContent":["\n\n// import './App.css';\n// import WebPage from './pages/pages';\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <WebPage />    \n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport React,{useState ,useEffect} from \"react\";\nimport { Switch ,Route ,Router} from \"react-router-dom\";\nimport Register from './pages/home';\nimport {CONTRACT_ADDRESS,ABI } from \"./config.js\"\nimport getWeb3 from './getWeb3';\nimport history from './pages/history';\nimport Patient from './pages/patients_dashboard';\nfunction App() {\n const[currentAccount,setCurrentAccount]= useState('');\n const[contract, setContract] = useState({});\n const[patient,setPatient] = useState([]);\n const getWeb3Data = async()=>{\n   try{\n     //obtain web3 from getWeb3\n     const web3 = await getWeb3();\n     //obtain the accounts\n     const accounts = await web3.eth.getAccounts();\n     console.log(accounts);\n     //obtain netwrokID\n    //  const netwrokID = await web3.eth.net.getId();\n    //  console.log(netwrokID);\n    //  const networkdeployed = Contract.networks[netwrokID];\n    //  console.log(networkdeployed);\n     const instance = await new web3.eth.Contract(ABI,CONTRACT_ADDRESS);\n     setCurrentAccount(accounts[0]);\n     setContract({...instance});\n     //Just to confirm working of addPatient and addDoctor function \n    //  const patient = await instance.methods.getPatientDetails(accounts[0]).call();\n    //  console.log(patient);\n    //  const doctor = await instance.methods.getDoctorByAddress(accounts[0]).call();\n    //  console.log(doctor);\n\n\n   }\n   catch(error){\n     alert(\"Cannot load web3 ,contract. Consult console for details\");\n     console.log(error);\n   }\n }\n  //Register Patient\n  const patientRegister = async(name,phone,gender,dob,blood)=>{\n    try{\n      console.log(name,phone,gender,dob,blood);\n      contract.methods.addPatient(name,phone,gender,dob,blood).send({from:currentAccount});\n    }\n    catch(error){\n      console.log(error);\n    }\n  }\n  //Register/Add Doctor\n  const doctorRegister = async(name,hname,contact,faculty)=>{\n    try{\n      console.log(name,contact,faculty);\n      contract.methods.addDoctor(name,hname,contact,faculty).send({from:currentAccount});\n      await getWeb3Data();\n\n    }\ncatch(error){\n  console.log(error);\n}\n  }\n  //Handle  patient Login\n  const phandlelogin = async()=>{\n    try{\n      console.log(\"sucess\");\n      const patient = await contract.methods.getPatientDetails(currentAccount).call();\n      setPatient(patient);\n      console.log(patient)\n      // if(patient.length!==0){\n        history.push('/patient')\n      // }\n      \n    }\n    catch(error){\n      console.error(error);\n      // alert(error)\n      alert(\"No records found\")\n    }\n  }\n//Patient grant Access to doctor\n  const grantAccess = async(doctor)=>{\n    try{\n       contract.methods.grantAccess(doctor).send({from:currentAccount})\n    }\n    catch(error){\n      console.error(error);\n    }\n  }\n  //Patient revoke access from doctor\n  const revokeAccess = async(doctor)=>{\n    try{\n      contract.methods.revoke_access(doctor).send({from:currentAccount})\n    }\n    catch(error){\n      console.error(error);\n      alert(error);\n    }\n  }\n  //Handle Doctor Login\n  const dhandlelogin = async()=>{\n    try{\n      console.log(\"doctor\");\n    }\n    catch(error){\n      console.log(error);\n    }\n  }\n  useEffect(()=>{\n    getWeb3Data();\n  },[]);\n  return (\n    \n      // <div className =\"Main\">\n        <Router history={history}>\n        <Switch>\n          <Route path ='/' exact>\n          <Register\n          patientRegister={patientRegister}\n          doctorRegister ={doctorRegister}\n          phandlelogin ={phandlelogin}\n          dhandlelogin ={dhandlelogin}\n          />\n          </Route>\n          <Route path ='/patient'>\n            <Patient\n            patient={patient}\n            grantAccess ={grantAccess}\n            revokeAccess ={revokeAccess}/>\n          </Route>\n          </Switch>\n          </Router>\n  \n      // </div>\n    )}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}